networks:
  kafka-network:
    driver: bridge
  gateway-network:
    driver: bridge
  account-service-network:
    driver: bridge
  identity-service-network:
    driver: bridge

services:
  absolute.cinema.gateway:
    image: absolute.cinema.gateway
    build:
      context: .
      dockerfile: source/Absolute.Cinema.Gateway/Dockerfile
    ports:
      - "10000:8080"
      - "10001:8081"
    networks:
      - gateway-network
    
  absolute.cinema.identity-service1:
    image: absolute.cinema.identity-service
    build:
      context: .
      dockerfile: source/Absolute.Cinema.IdentityService/Dockerfile
#    ports:
#      - "10101:8080"
    networks:
      - gateway-network
      - kafka-network
      - identity-service-network
  
  absolute.cinema.identity-service2:
    image: absolute.cinema.identity-service
    build:
      context: .
      dockerfile: source/Absolute.Cinema.IdentityService/Dockerfile
    #    ports:
    #      - "10102:8080"
    networks:
      - gateway-network
      - kafka-network
      - identity-service-network

  absolute.cinema.identity-service3:
    image: absolute.cinema.identity-service
    build:
      context: .
      dockerfile: source/Absolute.Cinema.IdentityService/Dockerfile
    #    ports:
    #      - "10103:8080"
    networks:
      - gateway-network
      - kafka-network
      - identity-service-network
#  
  absolute.cinema.account-service1:
    image: absolute.cinema.account-service
    build:
      context: .
      dockerfile: source/Absolute.Cinema.AccountService/Dockerfile
#    ports:
#      - "10201:8080"
    networks:
      - gateway-network
      - kafka-network
      - account-service-network
  
  absolute.cinema.account-service2:
    image: absolute.cinema.account-service
    build:
      context: .
      dockerfile: source/Absolute.Cinema.AccountService/Dockerfile
    #    ports:
    #      - "10202:8080"
    networks:
      - gateway-network
      - kafka-network
      - account-service-network

  absolute.cinema.account-service3:
    image: absolute.cinema.account-service
    build:
      context: .
      dockerfile: source/Absolute.Cinema.AccountService/Dockerfile
    #    ports:
    #      - "10203:8080"
    networks:
      - gateway-network
      - kafka-network
      - account-service-network

  identity-service.postgres:
    image: postgres:latest
    networks:
      - identity-service-network
    environment:
      - POSTGRES_DB=identity_service_db
      - POSTGRES_USER=identity-service
      - POSTGRES_PASSWORD=X9n$3k!7P@ql#B5r
  #    volumes:
  #      - :var/lib/postgresql/data
  
  account-service.postgres:
    image: postgres:latest
    networks:
      - account-service-network
    environment:
      - POSTGRES_DB=account_service_db
      - POSTGRES_USER=account-service
      - POSTGRES_PASSWORD=P@stgR3s!_X9v#2L
  #    volumes:
  #      - :var/lib/postgresql/data

  identity-service.redis:
    image: redis:latest
    networks:
      - identity-service-network
  
  account-service.redis:
    image: redis:latest
    networks:
      - account-service-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network